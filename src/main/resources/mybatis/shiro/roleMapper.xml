<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "com.tikie.shiro.mapper.RoleMapper">
    <sql id="roleColumns">
        A.*,
        R.groupId as groupId,
        R.roleId as roleId,

        R.isActive as r_isActive,
        R.createdBy as r_createdBy,
        R.updatedBy as r_updatedBy,
        R.createdTime as r_createdTime,
        R.updatedTime as r_updatedTime,
        R.note as r_note,

        P.roleId as p_roleId,
        P.authId as p_authId,

        P.isActive as p_isActive,
        P.createdBy as p_createdBy,
        P.updatedBy as p_updatedBy,
        P.createdTime as p_createdTime,
        P.updatedTime as p_updatedTime,
        P.note as p_note
    </sql>

    <resultMap id="GroupRoleRelation" type="com.tikie.shiro.entity.GroupRoleRelation" />
    <resultMap id="RoleAuthorizationRelation" type="com.tikie.shiro.entity.RoleAuthorizationRelation" />
    <!-- 角色结果集 -->
    <resultMap id="Role" type="com.tikie.shiro.entity.Role">
        <id property="id" column="id" />
        <result property="name" column="name"/>
        <result property="permission" column="permission"/>

        <result property="isActive" column="isActive"/>
        <result property="isDelete" column="isDelete"/>
        <result property="createdBy" column="createdBy"/>
        <result property="updatedBy" column="updatedBy"/>
        <result property="createdTime" column="createdTime"/>
        <result property="updatedTime" column="updatedTime"/>
        <result property="note" column="note"/>
        <collection property="groupRelationList" ofType="GroupRoleRelation">
            <id property="groupId" column="groupId" />
            <id property="roleId" column="roleId" />

            <result property="isActive" column="r_isActive"/>
            <result property="createdBy" column="r_createdBy"/>
            <result property="updatedBy" column="r_updatedBy"/>
            <result property="createdTime" column="r_createdTime"/>
            <result property="updatedTime" column="r_updatedTime"/>
            <result property="note" column="r_note"/>
        </collection>
        <collection property="authRelationList" ofType="RoleAuthorizationRelation">
            <id property="roleId" column="p_roleId" />
            <id property="authId" column="p_permissionId" />

            <result property="isActive" column="p_isActive"/>
            <result property="createdBy" column="p_createdBy"/>
            <result property="updatedBy" column="p_updatedBy"/>
            <result property="createdTime" column="p_createdTime"/>
            <result property="updatedTime" column="p_updatedTime"/>
            <result property="note" column="p_note"/>
        </collection>
    </resultMap>

    <!-- 获取用户组权限信息 -->
    <select id="getById" resultMap="Role">
        select
        <include refid="roleColumns"/>
        from `shiro_role` A
        left outer join `shiro_group_role_relation`          R on  R.isActive='1' and A.id = R.roleId
        left outer join `shiro_role_authorization_relation`  P on  P.isActive='1' and A.id = P.roleId
        where A.isDelete='0' and A.isActive='1' and A.id = #{id}
    </select>

    <select id="getByGroupIds" resultMap="Role">
        select
            *
        from `shiro_role` A
        where A.isDelete='0' and A.isActive='1' and
        FIND_IN_SET(id,(SELECT GROUP_CONCAT(roleId) from shiro_group_role_relation WHERE groupId in
            <foreach collection="array" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            )
        )
    </select>
</mapper>