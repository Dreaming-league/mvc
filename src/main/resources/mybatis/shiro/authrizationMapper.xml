<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "com.tikie.shiro.mapper.AuthorizationMapper">
    <sql id="authorizationColumns">
        A.*,
        R.roleId as roleId,
        R.authId as authId,

        R.isActive as r_isActive,
        R.isDelete as r_isDelete,
        R.createdBy as r_createdBy,
        R.updatedBy as r_updatedBy,
        R.createdTime as r_createdTime,
        R.updatedTime as r_updatedTime,
        R.note as r_note
    </sql>

    <resultMap id="RoleAuthorizationRelation" type="com.tikie.shiro.entity.RoleAuthorizationRelation" />
    <!-- 用户结果集 -->
    <resultMap id="Authorization" type="com.tikie.shiro.entity.Authorization">
        <id property="id" column="id" />
        <result property="name" column="name"/>
        <result property="permission" column="permission"/>
        <result property="type" column="type"/>

        <result property="isActive" column="isActive"/>
        <result property="isDelete" column="isDelete"/>
        <result property="createdBy" column="createdBy"/>
        <result property="updatedBy" column="updatedBy"/>
        <result property="createdTime" column="createdTime"/>
        <result property="updatedTime" column="updatedTime"/>
        <result property="note" column="note"/>
        <collection property="roleRelationList" ofType="RoleAuthorizationRelation">
            <id property="roleId" column="roleId" />
            <id property="authId" column="authId" />

            <result property="isActive" column="r_isActive"/>
            <result property="isDelete" column="r_isDelete"/>
            <result property="createdBy" column="r_createdBy"/>
            <result property="updatedBy" column="r_updatedBy"/>
            <result property="createdTime" column="r_createdTime"/>
            <result property="updatedTime" column="r_updatedTime"/>
            <result property="note" column="r_note"/>
        </collection>
        <collection property="children" ofType="Authorization" column="id" select="getChildren" />
    </resultMap>
    
    <select id="getChildren" resultMap="Authorization">
        SELECT * FROM `shiro_authorization` WHERE parentId=#{id}
    </select>

    <!-- 获取用户信息及用户权限关系信息 -->
    <select id="getById" resultMap="Authorization">
        select
        <include refid="authorizationColumns"/>
        from `shiro_authorization` A
        left outer join `shiro_role_authorization_relation` R on R.isActive='1' and A.id = R.authorizationId
        where A.isDelete='0' and A.isActive='1' and A.id = #{id}
    </select>

    <select id="getByRoleIds" resultMap="Authorization">
        select
        *
        from `shiro_authorization` A
        where A.isDelete='0' and A.isActive='1' and
        FIND_IN_SET(id,(SELECT GROUP_CONCAT(authId) from shiro_role_authorization_relation WHERE roleId in
            <foreach collection="array" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            )
        )
    </select>
</mapper>